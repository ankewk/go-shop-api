// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API 支持",
            "url": "https://github.com/gin-project",
            "email": "support@gin-project.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "项目欢迎页面，显示基本信息",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "系统管理"
                ],
                "summary": "欢迎页面",
                "responses": {
                    "200": {
                        "description": "欢迎信息",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/health": {
            "get": {
                "description": "检查API服务和数据库连接状态",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "系统管理"
                ],
                "summary": "系统健康检查",
                "responses": {
                    "200": {
                        "description": "服务正常",
                        "schema": {
                            "$ref": "#/definitions/models.HealthResponse"
                        }
                    },
                    "500": {
                        "description": "服务异常",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "description": "分页获取用户列表，支持页码和每页条数参数",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户管理"
                ],
                "summary": "获取用户列表",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "页码",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "每页条数",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "获取成功",
                        "schema": {
                            "$ref": "#/definitions/models.UserListResponse"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "创建一个新的用户账户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户管理"
                ],
                "summary": "创建新用户",
                "parameters": [
                    {
                        "description": "用户信息",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "创建成功",
                        "schema": {
                            "$ref": "#/definitions/models.SingleUserResponse"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "description": "通过用户ID获取用户详细信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户管理"
                ],
                "summary": "根据ID获取用户信息",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "用户ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "获取成功",
                        "schema": {
                            "$ref": "#/definitions/models.SingleUserResponse"
                        }
                    },
                    "400": {
                        "description": "用户ID格式错误",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "用户不存在",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "根据用户ID更新用户信息，支持部分字段更新",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户管理"
                ],
                "summary": "更新用户信息",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "用户ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "更新的用户信息",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "更新成功",
                        "schema": {
                            "$ref": "#/definitions/models.SingleUserResponse"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "用户不存在",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "根据用户ID删除用户（软删除）",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户管理"
                ],
                "summary": "删除用户",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "用户ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "删除成功",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    },
                    "400": {
                        "description": "用户ID格式错误",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "用户不存在",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.APIResponse": {
            "description": "通用API响应格式",
            "type": "object",
            "properties": {
                "code": {
                    "description": "响应状态码",
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "description": "响应数据"
                },
                "error": {
                    "description": "错误信息",
                    "type": "string",
                    "example": ""
                },
                "message": {
                    "description": "响应消息",
                    "type": "string",
                    "example": "操作成功"
                }
            }
        },
        "models.CreateUserRequest": {
            "description": "创建用户的请求参数",
            "type": "object",
            "required": [
                "name",
                "email"
            ],
            "properties": {
                "email": {
                    "description": "邮箱地址（必填，格式验证）",
                    "type": "string",
                    "example": "zhangsan@example.com"
                },
                "name": {
                    "description": "用户姓名（必填，1-100字符）",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "张三"
                },
                "phone": {
                    "description": "手机号码（可选，最多20字符）",
                    "type": "string",
                    "maxLength": 20,
                    "example": "13888888888"
                }
            }
        },
        "models.ErrorResponse": {
            "description": "错误响应格式",
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "error": {
                    "type": "string",
                    "example": "name字段不能为空"
                },
                "message": {
                    "type": "string",
                    "example": "请求参数错误"
                }
            }
        },
        "models.HealthResponse": {
            "description": "健康检查响应",
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "message": {
                    "type": "string",
                    "example": "健康检查通过"
                }
            }
        },
        "models.PaginationInfo": {
            "description": "分页信息",
            "type": "object",
            "properties": {
                "page": {
                    "description": "当前页码",
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "description": "每页条数",
                    "type": "integer",
                    "example": 10
                },
                "total": {
                    "description": "总记录数",
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "models.SingleUserResponse": {
            "description": "单个用户响应",
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/models.User"
                },
                "message": {
                    "type": "string",
                    "example": "用户信息获取成功"
                }
            }
        },
        "models.UpdateUserRequest": {
            "description": "更新用户的请求参数",
            "type": "object",
            "properties": {
                "email": {
                    "description": "邮箱地址（可选）",
                    "type": "string",
                    "example": "lisi@example.com"
                },
                "name": {
                    "description": "用户姓名（可选）",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "李四"
                },
                "phone": {
                    "description": "手机号码（可选）",
                    "type": "string",
                    "maxLength": 20,
                    "example": "13999999999"
                }
            }
        },
        "models.User": {
            "description": "用户信息模型",
            "type": "object",
            "required": [
                "name",
                "email"
            ],
            "properties": {
                "avatar": {
                    "description": "头像URL",
                    "type": "string",
                    "example": "https://example.com/avatar.jpg"
                },
                "created_at": {
                    "description": "创建时间",
                    "type": "string",
                    "example": "2024-01-01T12:00:00Z"
                },
                "email": {
                    "description": "邮箱地址",
                    "type": "string",
                    "example": "zhangsan@example.com"
                },
                "id": {
                    "description": "用户ID",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "用户姓名",
                    "type": "string",
                    "example": "张三"
                },
                "phone": {
                    "description": "手机号码",
                    "type": "string",
                    "example": "13888888888"
                },
                "status": {
                    "description": "用户状态：1正常，0禁用",
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "description": "更新时间",
                    "type": "string",
                    "example": "2024-01-01T12:00:00Z"
                }
            }
        },
        "models.UserListResponse": {
            "description": "用户列表响应",
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "用户列表获取成功"
                },
                "pagination": {
                    "$ref": "#/definitions/models.PaginationInfo"
                }
            }
        }
    },
    "tags": [
        {
            "description": "用户相关的增删改查操作",
            "name": "用户管理"
        },
        {
            "description": "系统状态和健康检查相关接口",
            "name": "系统管理"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Gin MVC API",
	Description:      "这是一个使用Gin框架和MVC架构构建的RESTful API服务\n提供用户管理功能，支持完整的CRUD操作",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
