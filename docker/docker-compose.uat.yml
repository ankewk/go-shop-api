version: '3.8'

services:
  # MySQL 数据库 - UAT环境
  mysql-uat:
    image: mysql:8.0
    container_name: gin-mysql-uat
    restart: unless-stopped
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: uat_root_456
      MYSQL_DATABASE: gin_uat
      MYSQL_USER: gin_uat_user
      MYSQL_PASSWORD: gin_uat_pass
    volumes:
      - mysql_data_uat:/var/lib/mysql
      - ../scripts/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ../scripts/seed_data.sql:/docker-entrypoint-initdb.d/02-seed.sql
      - ./mysql/uat.cnf:/etc/mysql/conf.d/custom.cnf
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - microservices-uat-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "gin_uat_user", "-pgin_uat_pass"]
      timeout: 10s
      retries: 5
      start_period: 30s
      interval: 60s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Redis缓存 - UAT环境
  redis-uat:
    image: redis:7-alpine
    container_name: gin-redis-uat
    restart: unless-stopped
    ports:
      - "6380:6379"
    command: redis-server --requirepass uat_redis_456
    volumes:
      - redis_data_uat:/data
    networks:
      - microservices-uat-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 5s
      retries: 3
      start_period: 10s
      interval: 60s
    deploy:
      resources:
        limits:
          memory: 256M

  # API网关 - UAT环境
  api-gateway-uat:
    build:
      context: ..
      dockerfile: services/api-gateway/Dockerfile.simple
    container_name: gin-api-gateway-uat
    restart: unless-stopped
    ports:
      - "9080:9080"
    env_file:
      - ../config/uat.env
    environment:
      PORT: 9080
      GIN_MODE: release
      USER_SERVICE_HOST: host.docker.internal
      USER_SERVICE_PORT: 9085
      PRODUCT_SERVICE_HOST: host.docker.internal
      PRODUCT_SERVICE_PORT: 9082
      CART_SERVICE_HOST: host.docker.internal
      CART_SERVICE_PORT: 9083
      ORDER_SERVICE_HOST: host.docker.internal
      ORDER_SERVICE_PORT: 9084
    depends_on:
      mysql-uat:
        condition: service_healthy
      redis-uat:
        condition: service_healthy
    networks:
      - microservices-uat-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ../logs/uat:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9080/health"]
      timeout: 15s
      retries: 3
      start_period: 60s
      interval: 60s
    deploy:
      resources:
        limits:
          memory: 512M

  # Nginx反向代理 - UAT环境
  nginx-uat:
    image: nginx:alpine
    container_name: gin-nginx-uat
    restart: unless-stopped
    ports:
      - "8180:80"
    volumes:
      - ./nginx/uat.conf:/etc/nginx/conf.d/default.conf
      - ../frontend:/usr/share/nginx/html
      - ../logs/nginx/uat:/var/log/nginx
    depends_on:
      - api-gateway-uat
    networks:
      - microservices-uat-network
    deploy:
      resources:
        limits:
          memory: 128M

  # 监控服务 - Prometheus (UAT环境)
  prometheus-uat:
    image: prom/prometheus:latest
    container_name: gin-prometheus-uat
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus/uat.yml:/etc/prometheus/prometheus.yml
      - prometheus_data_uat:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=720h'
      - '--web.enable-lifecycle'
    networks:
      - microservices-uat-network
    deploy:
      resources:
        limits:
          memory: 1G

  # 日志管理 - Grafana (UAT环境)
  grafana-uat:
    image: grafana/grafana:latest
    container_name: gin-grafana-uat
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=uat_admin_456
    volumes:
      - grafana_data_uat:/var/lib/grafana
    depends_on:
      - prometheus-uat
    networks:
      - microservices-uat-network
    deploy:
      resources:
        limits:
          memory: 512M

  # ELK Stack - Elasticsearch (UAT环境日志收集)
  elasticsearch-uat:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: gin-elasticsearch-uat
    restart: unless-stopped
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data_uat:/usr/share/elasticsearch/data
    networks:
      - microservices-uat-network
    deploy:
      resources:
        limits:
          memory: 1G

networks:
  microservices-uat-network:
    driver: bridge
    name: go-shop-uat-network

volumes:
  mysql_data_uat:
    driver: local
  redis_data_uat:
    driver: local
  prometheus_data_uat:
    driver: local
  grafana_data_uat:
    driver: local
  elasticsearch_data_uat:
    driver: local 